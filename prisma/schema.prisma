// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model User {
  id         String     @id            @default(uuid())
  email      String     @unique
  name       String
  createdAt  DateTime                  @default(now())
  profileImg String?
  nickname   String
  posts      Post[]
  comments   Comment[]
  savedPosts SavedPost[]
}

model Category {
  id        String   @id  @default(uuid())
  name      String
  posts     Post[]
}

model Post {
  id            String     @id @default(uuid())
  author        User       @relation(fields: [authorId], references: [id])
  authorId      String
  category      Category   @relation(fields: [categoryId], references: [id])
  categoryId    String
  title         String
  content       String?
  thumbnailImg  String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  isDeleted     Boolean    @default(false)
  likes         Int        @default(0)
  saves         Int        @default(0)
  comments      Comment[]
  savedPosts    SavedPost[]
  tags          Tag[]
}

model Comment {
  id               String     @id @default(uuid())
  author           User       @relation(fields: [authorId], references: [id])
  authorId         String
  post             Post       @relation(fields: [postId], references: [id])
  postId           String
  content          String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  isDeleted        Boolean    @default(false)
  parentComment    Comment?   @relation("ChildComment", fields: [parentCommentId], references: [id])
  parentCommentId  String?
  childComments    Comment[]  @relation("ChildComment")
}

model SavedPost {
  id        String   @id  @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
}

model Tag {
  id        String   @id  @default(uuid())
  name      String
  posts     Post[]
}